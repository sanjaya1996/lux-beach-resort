[{"S:\\lux-beach-resort\\client\\src\\screens\\EditRoomScreen.js":"1","S:\\lux-beach-resort\\client\\src\\screens\\HomeScreen.js":"2","S:\\lux-beach-resort\\client\\src\\components\\FeaturedRooms.js":"3","S:\\lux-beach-resort\\client\\src\\store\\actions\\rooms.js":"4","S:\\lux-beach-resort\\client\\src\\components\\RoomsContainer.js":"5","S:\\lux-beach-resort\\client\\src\\App.js":"6","S:\\lux-beach-resort\\client\\src\\components\\Navbar.js":"7","S:\\lux-beach-resort\\client\\src\\screens\\ProfileScreen.js":"8","S:\\lux-beach-resort\\client\\src\\screens\\ErrorScreen.js":"9","S:\\lux-beach-resort\\client\\src\\store\\actions\\bookings.js":"10","S:\\lux-beach-resort\\client\\src\\screens\\PaymentScreen.js":"11","S:\\lux-beach-resort\\client\\src\\screens\\SingleRoomScreen.js":"12","S:\\lux-beach-resort\\client\\src\\store\\actions\\guests.js":"13","S:\\lux-beach-resort\\client\\src\\store\\reducers\\guests.js":"14","S:\\lux-beach-resort\\client\\src\\store\\store.js":"15","S:\\lux-beach-resort\\client\\src\\components\\AlertBox.js":"16","S:\\lux-beach-resort\\client\\src\\screens\\RoomsScreen.js":"17","S:\\lux-beach-resort\\client\\src\\store\\reducers\\bookings.js":"18","S:\\lux-beach-resort\\client\\src\\screens\\MessageScreen.js":"19","S:\\lux-beach-resort\\client\\src\\screens\\AdminRoomListScreen.js":"20","S:\\lux-beach-resort\\client\\src\\screens\\BookingDetailsScreen.js":"21","S:\\lux-beach-resort\\client\\src\\screens\\BookingListScreen.js":"22","S:\\lux-beach-resort\\client\\src\\components\\RoomsFilter.js":"23"},{"size":9178,"mtime":1609039593203,"results":"24","hashOfConfig":"25"},{"size":665,"mtime":1609066064503,"results":"26","hashOfConfig":"25"},{"size":989,"mtime":1609066436375,"results":"27","hashOfConfig":"25"},{"size":5437,"mtime":1609240000821,"results":"28","hashOfConfig":"25"},{"size":1042,"mtime":1609066402540,"results":"29","hashOfConfig":"25"},{"size":2128,"mtime":1609192980636,"results":"30","hashOfConfig":"25"},{"size":2011,"mtime":1609310166870,"results":"31","hashOfConfig":"25"},{"size":6792,"mtime":1609240434512,"results":"32","hashOfConfig":"25"},{"size":318,"mtime":1608087560527,"results":"33","hashOfConfig":"25"},{"size":6053,"mtime":1609301229750,"results":"34","hashOfConfig":"25"},{"size":11587,"mtime":1609289451629,"results":"35","hashOfConfig":"25"},{"size":3972,"mtime":1608434670702,"results":"36","hashOfConfig":"25"},{"size":1798,"mtime":1609304688354,"results":"37","hashOfConfig":"25"},{"size":1296,"mtime":1609129497811,"results":"38","hashOfConfig":"25"},{"size":1535,"mtime":1609301063506,"results":"39","hashOfConfig":"25"},{"size":1465,"mtime":1609239895287,"results":"40","hashOfConfig":"25"},{"size":558,"mtime":1606872538989,"results":"41","hashOfConfig":"25"},{"size":2570,"mtime":1609301005070,"results":"42","hashOfConfig":"25"},{"size":273,"mtime":1608087132396,"results":"43","hashOfConfig":"25"},{"size":4500,"mtime":1609306253366,"results":"44","hashOfConfig":"25"},{"size":7677,"mtime":1609309052830,"results":"45","hashOfConfig":"25"},{"size":3051,"mtime":1609311736683,"results":"46","hashOfConfig":"25"},{"size":7723,"mtime":1609315503317,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"tqt03e",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"S:\\lux-beach-resort\\client\\src\\screens\\EditRoomScreen.js",["97"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Loading from '../components/Loading';\r\nimport * as roomActions from '../store/actions/rooms';\r\nimport { ROOM_CREATE_RESET, ROOM_UPDATE_RESET } from '../store/reducers/rooms';\r\nimport AlertBox from '../components/AlertBox';\r\n\r\nconst EditRoomScreen = ({ match, history }) => {\r\n  const roomId = match.params.id;\r\n  console.log(roomId);\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [size, setSize] = useState('');\r\n  const [capacity, setCapacity] = useState(1);\r\n  const [images, setImages] = useState([]);\r\n  const [description, setDescription] = useState('');\r\n  const [extra, setExtra] = useState('');\r\n  const [extras, setExtras] = useState([]);\r\n  const [pets, setPets] = useState(false);\r\n  const [breakfast, setBreakfast] = useState(false);\r\n  const [featured, setFeatured] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const roomDetails = useSelector((state) => state.roomDetails);\r\n  const { loading, room, error } = roomDetails;\r\n\r\n  const roomCreate = useSelector((state) => state.roomCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    success: successCreate,\r\n    error: errorCreate,\r\n  } = roomCreate;\r\n\r\n  const roomUpdate = useSelector((state) => state.roomUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n    error: errorUpdate,\r\n  } = roomUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successCreate || successUpdate) {\r\n      dispatch({ type: roomId ? ROOM_UPDATE_RESET : ROOM_CREATE_RESET });\r\n      history.push('/admin/roomlist');\r\n    } else if (roomId) {\r\n      dispatch(roomActions.listRoomDetails(roomId));\r\n    }\r\n  }, [dispatch, roomId, history, successUpdate, successCreate]);\r\n\r\n  useEffect(() => {\r\n    if (room && roomId) {\r\n      setName(room.name);\r\n      setType(room.type);\r\n      setPrice(room.price);\r\n      setSize(room.size);\r\n      setCapacity(room.capacity);\r\n      setImages(room.images);\r\n      setExtras(room.extras);\r\n      setDescription(room.description);\r\n      setPets(room.pets);\r\n      setBreakfast(room.breakfast);\r\n      setFeatured(room.featured);\r\n    }\r\n  }, [room, roomId]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (roomId) {\r\n      dispatch(\r\n        roomActions.updateRoom({\r\n          id: roomId,\r\n          name,\r\n          type,\r\n          price,\r\n          size,\r\n          capacity,\r\n          images,\r\n          description,\r\n          extras,\r\n          pets,\r\n          breakfast,\r\n          featured,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        roomActions.createRoom({\r\n          name,\r\n          type,\r\n          price,\r\n          size,\r\n          capacity,\r\n          images,\r\n          description,\r\n          extras,\r\n          pets,\r\n          breakfast,\r\n          featured,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const files = e.target.files;\r\n    const formData = new FormData();\r\n    for (let i = 0; i < files.length; i++) {\r\n      formData.append('roomImages', files[i]);\r\n    }\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n      setImages(data);\r\n      setUploading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const deleteExtraHandler = (index) => {\r\n    setExtras(extras.filter((item, i) => i !== index));\r\n  };\r\n\r\n  const alertCloseHandler = () => {\r\n    dispatch({ type: roomId ? ROOM_UPDATE_RESET : ROOM_CREATE_RESET });\r\n  };\r\n\r\n  if (loading || loadingCreate || loadingUpdate) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div className='edit-room'>\r\n      {((roomId && errorUpdate) || (!roomId && errorCreate)) && (\r\n        <AlertBox\r\n          message={roomId ? errorUpdate : errorCreate}\r\n          onClose={alertCloseHandler}\r\n        />\r\n      )}\r\n\r\n      <form onSubmit={submitHandler} className='form-container'>\r\n        <div className='form-group'>\r\n          <label htmlFor='name'>Room Name:</label>\r\n          <input\r\n            type='text'\r\n            name='name'\r\n            id='name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            className='form-control'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='type'>Room Type:</label>\r\n          <input\r\n            type='text'\r\n            name='type'\r\n            id='type'\r\n            value={type}\r\n            onChange={(e) => setType(e.target.value)}\r\n            className='form-control'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='price'>Price:</label>\r\n          <input\r\n            type='text'\r\n            name='price'\r\n            id='price'\r\n            value={price}\r\n            onChange={(e) => setPrice(e.target.value)}\r\n            className='form-control'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='size'>Size:</label>\r\n          <input\r\n            type='text'\r\n            name='size'\r\n            id='size'\r\n            value={size}\r\n            onChange={(e) => setSize(e.target.value)}\r\n            className='form-control'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='capacity'>Capacity:</label>\r\n          <input\r\n            type='number'\r\n            name='capacity'\r\n            id='capacity'\r\n            value={capacity}\r\n            onChange={(e) => setCapacity(e.target.value)}\r\n            className='form-control'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='images'>Images:</label>\r\n          {uploading && Loading}\r\n          <input\r\n            type='file'\r\n            name='images'\r\n            id='images'\r\n            multiple\r\n            onChange={uploadFileHandler}\r\n            className='form-control'\r\n          />\r\n          <ul className='extra-list'>\r\n            {images.map((item, index) => (\r\n              <li key={index}>- {item}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='extra'>Extras:</label>\r\n          <div className='extras-input'>\r\n            <input\r\n              type='text'\r\n              name='extra'\r\n              id='extra'\r\n              value={extra}\r\n              multiple\r\n              onChange={(e) => setExtra(e.target.value)}\r\n              className='form-control'\r\n            />\r\n            <button\r\n              type='button'\r\n              style={{ width: 'auto' }}\r\n              onClick={() => setExtras((prevState) => [...prevState, extra])}\r\n            >\r\n              Add to list\r\n            </button>\r\n          </div>\r\n          <ul className='extra-list'>\r\n            {extras.map((item, index) => (\r\n              <li key={index} onClick={() => deleteExtraHandler(index)}>\r\n                - {item}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          {extras.length > 0 && (\r\n            <p className='note'>\r\n              <i>*click an item to remove*</i>\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='description'>Description:</label>\r\n          <textarea\r\n            name='description'\r\n            id='description'\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            className='form-control'\r\n            style={{ height: 100 }}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <div className='single-extra'>\r\n            <input\r\n              type='checkbox'\r\n              name='breakfast'\r\n              id='breakfast'\r\n              checked={breakfast}\r\n              onChange={(e) => setBreakfast(e.target.checked)}\r\n            />\r\n            <label htmlFor='breakfast'>breakfast</label>\r\n          </div>\r\n          <div className='single-extra'>\r\n            <input\r\n              type='checkbox'\r\n              name='pets'\r\n              id='pets'\r\n              checked={pets}\r\n              onChange={(e) => setPets(e.target.checked)}\r\n            />\r\n            <label htmlFor='pets'>pets</label>\r\n          </div>\r\n          <div className='single-extra'>\r\n            <input\r\n              type='checkbox'\r\n              name='featured'\r\n              id='featured'\r\n              checked={featured}\r\n              onChange={(e) => setFeatured(e.target.checked)}\r\n            />\r\n            <label htmlFor='featured'>Featured</label>\r\n          </div>\r\n        </div>\r\n        <div className='form-group'>\r\n          <button type='submit' className='btn-primary'>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditRoomScreen;\r\n","S:\\lux-beach-resort\\client\\src\\screens\\HomeScreen.js",[],"S:\\lux-beach-resort\\client\\src\\components\\FeaturedRooms.js",[],"S:\\lux-beach-resort\\client\\src\\store\\actions\\rooms.js",[],"S:\\lux-beach-resort\\client\\src\\components\\RoomsContainer.js",[],"S:\\lux-beach-resort\\client\\src\\App.js",[],["98","99"],"S:\\lux-beach-resort\\client\\src\\components\\Navbar.js",[],"S:\\lux-beach-resort\\client\\src\\screens\\ProfileScreen.js",["100"],"S:\\lux-beach-resort\\client\\src\\screens\\ErrorScreen.js",[],"S:\\lux-beach-resort\\client\\src\\store\\actions\\bookings.js",[],"S:\\lux-beach-resort\\client\\src\\screens\\PaymentScreen.js",[],"S:\\lux-beach-resort\\client\\src\\screens\\SingleRoomScreen.js",["101"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Loading from '../components/Loading';\r\nimport Banner from '../components/Banner';\r\nimport StyledHero from '../components/StyledHero';\r\nimport * as roomsActions from '../store/actions/rooms';\r\nimport * as cartActions from '../store/actions/cart';\r\nimport ErrorScreen from './ErrorScreen';\r\nimport { CHECK_AVAILABILITY_RESET } from '../store/reducers/rooms';\r\n\r\nconst SingleRoomScreen = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const roomDetails = useSelector((state) => state.roomDetails);\r\n  const { loading, room, error } = roomDetails;\r\n\r\n  const filters = useSelector((state) => state.roomList.filters);\r\n  const { capacity: filterCapacity, checkInDate, checkOutDate } = filters;\r\n\r\n  useEffect(() => {\r\n    dispatch(roomsActions.listRoomDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    dispatch({ type: CHECK_AVAILABILITY_RESET });\r\n    dispatch(\r\n      cartActions.addToCart(\r\n        room.id,\r\n        checkInDate ? checkInDate : null,\r\n        checkOutDate ? checkOutDate : null,\r\n        room.capacity\r\n      )\r\n    );\r\n    history.push('/cart');\r\n  };\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <ErrorScreen title='Error' subtitle={error} redirect='/rooms'>\r\n        return back\r\n      </ErrorScreen>\r\n    );\r\n  }\r\n\r\n  if (!loading & !room) {\r\n    return (\r\n      <div className='error'>\r\n        <h3>no such room could be found...</h3>\r\n        <Link to='/rooms' className='btn-primary'>\r\n          back to rooms\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const {\r\n    name,\r\n    description,\r\n    capacity,\r\n    size,\r\n    price,\r\n    extras,\r\n    breakfast,\r\n    pets,\r\n    images,\r\n  } = room;\r\n  const [mainImg, ...defaultImages] = images;\r\n  const mainImgCorrectPath = mainImg.replace('\\\\', '\\\\\\\\');\r\n  return (\r\n    <>\r\n      <StyledHero img={mainImgCorrectPath}>\r\n        <Banner title={`${name} room`}>\r\n          <Link to='/rooms' className='btn-primary'>\r\n            back to rooms\r\n          </Link>\r\n        </Banner>\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            bottom: 20,\r\n            right: 20,\r\n          }}\r\n        >\r\n          <button\r\n            type='button'\r\n            className='btn-primary action-btn'\r\n            onClick={addToCartHandler}\r\n          >\r\n            Book now\r\n          </button>\r\n        </div>\r\n      </StyledHero>\r\n      <section className='single-room'>\r\n        <div className='single-room-images'>\r\n          {defaultImages.map((item, index) => (\r\n            <img key={index} src={item} alt={name} />\r\n          ))}\r\n        </div>\r\n        <div className='single-room-info'>\r\n          <article className='desc'>\r\n            <h3>details</h3>\r\n            <p>{description}</p>\r\n          </article>\r\n          <article className='info'>\r\n            <h3>info</h3>\r\n            <h6>price : ${price}</h6>\r\n            <h6>size : {size} SQFT</h6>\r\n            <h6>\r\n              max capacity :\r\n              {capacity > 1 ? `${capacity} people` : `${capacity} person`}\r\n            </h6>\r\n            <h6>{pets ? 'pets allowed' : 'no pets allowed'}</h6>\r\n            <h6>{breakfast && 'free breakfast included'}</h6>\r\n          </article>\r\n        </div>\r\n      </section>\r\n      <section className='room-extras'>\r\n        <h6>extras </h6>\r\n        <ul className='extras'>\r\n          {extras.map((item, index) => (\r\n            <li key={index}>- {item}</li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n      <div className='align-bottom-right'>\r\n        <button\r\n          type='button'\r\n          className='btn-primary action-btn '\r\n          onClick={addToCartHandler}\r\n        >\r\n          Book now\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleRoomScreen;\r\n","S:\\lux-beach-resort\\client\\src\\store\\actions\\guests.js",[],"S:\\lux-beach-resort\\client\\src\\store\\reducers\\guests.js",[],"S:\\lux-beach-resort\\client\\src\\store\\store.js",[],"S:\\lux-beach-resort\\client\\src\\components\\AlertBox.js",[],"S:\\lux-beach-resort\\client\\src\\screens\\RoomsScreen.js",[],"S:\\lux-beach-resort\\client\\src\\store\\reducers\\bookings.js",[],"S:\\lux-beach-resort\\client\\src\\screens\\MessageScreen.js",[],"S:\\lux-beach-resort\\client\\src\\screens\\AdminRoomListScreen.js",[],"S:\\lux-beach-resort\\client\\src\\screens\\BookingDetailsScreen.js",[],"S:\\lux-beach-resort\\client\\src\\screens\\BookingListScreen.js",[],"S:\\lux-beach-resort\\client\\src\\components\\RoomsFilter.js",[],{"ruleId":"102","severity":1,"message":"103","line":31,"column":26,"nodeType":"104","messageId":"105","endLine":31,"endColumn":31},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"102","severity":1,"message":"110","line":26,"column":12,"nodeType":"104","messageId":"105","endLine":26,"endColumn":24},{"ruleId":"102","severity":1,"message":"111","line":20,"column":21,"nodeType":"104","messageId":"105","endLine":20,"endColumn":35},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'errorBooking' is assigned a value but never used.","'filterCapacity' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]